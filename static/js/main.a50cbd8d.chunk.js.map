{"version":3,"sources":["stores/user/slice.ts","stores/user/index.ts","components/users/Users.tsx","components/users/index.tsx","stores/log/slice.ts","stores/log/index.ts","components/logs/Log.tsx","components/logs/index.tsx","Top.tsx","About.tsx","Root.tsx","index.tsx"],"names":["getDataByKey","createAsyncThunk","a","axios","get","response","data","sliceA","createSlice","name","initialState","objData","loading","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","selectPosts","compo","store","configureStore","reducer","Users","posts","useSelector","dispatch","useDispatch","useEffect","className","Object","keys","length","map","item","onClick","id","console","log","Avatar","alt","src","en","sx","width","height","Component","Logs","Box","margin","Card","variant","CardContent","Typography","fontSize","align","color","gutterBottom","title","component","mb","timestamp","CardActions","Button","size","Log","Top","to","pathname","fromDashboard","About","props","Root","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a50cbd8d.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios'\r\n\r\n//===================================================================\r\n//   MOCK API: PS B:\\@mockserver> json-server --watch ./sample.json\r\n//===================================================================\r\n\r\nconst KEY_WORD = 'user'\r\n\r\ninterface Response {\r\n  \"id\": number,\r\n  \"name\"?: string,\r\n  \"address\"?: string,\r\n  \"age\"?: number,\r\n}\r\n\r\nexport const getDataByKey = createAsyncThunk<Response>(\r\n  'compo/fetchByKey',\r\n  async () => {\r\n    const response = await axios.get(`http://localhost:3000/${KEY_WORD}`)\r\n    return response.data\r\n  }\r\n)\r\n\r\nconst sliceA = createSlice({\r\n  name: 'compo',   //Reducer Name: state.compo  -> stote={reducer:{compo: importedName}}\r\n  initialState: { objData: {}, loading: 'idle' },  //state.compo.objData\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getDataByKey.pending, (state, action) => {\r\n        //console.log('loading'); //OK\r\n        state.loading = 'loading';\r\n      })\r\n      .addCase(getDataByKey.fulfilled, (state, { payload }) => {\r\n        //console.log(payload); //OK\r\n        state.objData = payload;\r\n        state.loading = 'success';\r\n      })\r\n      .addCase(getDataByKey.rejected, (state, action) => {\r\n        state.loading = 'failed';\r\n      })\r\n  },\r\n});\r\n\r\nexport const selectPosts = (state: any) => state.compo.objData; //name はここに\r\n\r\nexport default sliceA.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    compo: reducer   //\"sliceA\" の name がここに\r\n  },\r\n});","import React, { useEffect } from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDataByKey, selectPosts } from '../../stores/user/slice';\r\n\r\nimport './Users.scss'\r\n\r\ntype one = {\r\n  \"id\": number,\r\n  \"name\"?: string,\r\n  \"address\"?: string,\r\n  \"age\"?: number,\r\n  \"en\": string,\r\n}\r\n\r\nconst Users = () => {\r\n  const posts = useSelector(selectPosts);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(\r\n    () => { dispatch(getDataByKey()) },\r\n    [dispatch]\r\n  );\r\n\r\n  const insideAvatarFunction = (id: number) => {\r\n    console.log('Avatar Clicked:', id)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      {\r\n        posts && Object.keys(posts).length > 0 && posts.map((item: one) => {\r\n          return (\r\n            <div\r\n              key={item.id}\r\n              className=\"listitem\"\r\n              onClick={() => insideAvatarFunction(item.id)}>\r\n              <Avatar\r\n                alt={item.name}\r\n                src={`./images/${item.en}.jpg`}\r\n                sx={{ width: 60, height: 60 }}\r\n              />\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../../stores/user';\r\nimport Users from './Users';  //CompoXXXCore:Local 任意名\r\n\r\nconst Component = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Users />\r\n    </Provider>);\r\n}\r\n\r\nexport default Component;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios'\r\n\r\n//===================================================================\r\n//\r\n//   MOCK API: PS B:\\@mockserver> json-server --watch ./sample.json\r\n//\r\n//===================================================================\r\n\r\nconst KEY_WORD = 'log'\r\n\r\ninterface Response {\r\n  \"id\": string,\r\n  \"title\": string,\r\n  \"timestamp\": string,\r\n  \"uid\": number,\r\n  \"log\": string,\r\n}\r\n\r\nexport const getDataByKey = createAsyncThunk<Response>(\r\n  'compo/fetchByKey',\r\n  async () => {\r\n    const response = await axios.get(`http://localhost:3000/${KEY_WORD}`)\r\n    return response.data\r\n  }\r\n)\r\n\r\nconst sliceA = createSlice({\r\n  name: 'compo',   //Reducer Name: state.compo  -> stote={reducer:{compo: importedName}}\r\n  initialState: { objData: {}, loading: 'idle' },  //state.compo.objData\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getDataByKey.pending, (state, action) => {\r\n        //console.log('loading'); //OK\r\n        state.loading = 'loading';\r\n      })\r\n      .addCase(getDataByKey.fulfilled, (state, { payload }) => {\r\n        //console.log(payload); //OK\r\n        state.objData = payload;\r\n        state.loading = 'success';\r\n      })\r\n      .addCase(getDataByKey.rejected, (state, action) => {\r\n        state.loading = 'failed';\r\n      })\r\n  },\r\n});\r\n\r\nexport const selectPosts = (state: any) => state.compo.objData; //name はここに\r\n\r\nexport default sliceA.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    compo: reducer   //\"sliceA\" の name がここに\r\n  },\r\n});","import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDataByKey, selectPosts } from '../../stores/log/slice';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\ntype Props = {\r\n  \"id\": string,\r\n  \"title\": string,\r\n  \"timestamp\": string,\r\n  \"log\": string,\r\n}\r\n\r\nconst Logs = () => {\r\n  const posts = useSelector(selectPosts);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(\r\n    () => { dispatch(getDataByKey()) },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {\r\n        posts && Object.keys(posts).length > 0 && posts.map((item: Props) => {\r\n          return (\r\n            <Box key={item.id} sx={{ margin: 1 }}>\r\n              <Card variant=\"outlined\">\r\n                <CardContent>\r\n                  <Typography sx={{ fontSize: 14 }} align=\"left\" color=\"text.secondary\" gutterBottom>\r\n                    {item.title}\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" align=\"left\" component=\"div\">\r\n                    {item.log}\r\n                  </Typography>\r\n                  <Typography sx={{ mb: 1.5 }} align=\"right\" color=\"text.secondary\">\r\n                    {item.timestamp}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" >Learn More</Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Box>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Logs;","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../../stores/log/';\r\nimport Logs from './Log';  //CompoXXXCore:Local 任意名\r\n\r\nconst Component = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Logs />\r\n    </Provider>);\r\n}\r\n\r\nexport default Component;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport Users from './components/users'   //call index.tsx\nimport Logs from './components/logs'\n// import CompoZ from './components/compoZ/CompoZ'\n\nimport './Top.scss';\n\nfunction Top(): JSX.Element {\n  return (\n    <>\n      <div className=\"header\">\n        <span>HEADER</span>\n        <Link\n          to={{\n            pathname: \"/About\",\n            state: { fromDashboard: true }\n          }}\n        >About</Link>\n      </div>\n      <div className=\"main\">\n        <div className=\"title\">\n          TITLE\n        </div>\n        <div className=\"sec_l\">\n          <Users />\n        </div>\n        <div className=\"body\">\n          <Logs />\n        </div>\n        <div className=\"sec_r\">\n          RIGHT\n        </div>\n      </div>\n      <div className=\"footer\">\n        FOOTER\n      </div>\n    </>\n  );\n}\n\nexport default Top;","import * as React from 'react';\r\n\r\nexport interface IAboutProps {\r\n}\r\n\r\nexport default function About(props: IAboutProps) {\r\n  return (\r\n    <div>\r\n      About\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Top from './Top'\r\nimport About from './About'\r\n\r\nexport default function Root() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/about\"> <About /> </Route>\r\n          <Route path=\"/\"     > <Top /> </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ROOT from './Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ROOT />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}